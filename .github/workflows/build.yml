name: Build verification

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows",
            os: windows-latest,
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            generators: "Visual Studio 17 2022",
            executable_file: "Release/RType.exe"
          }
          - {
            name: "Linux",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja",
            executable_file: "RType"
          }
          - {
            name: "MacOS Intel",
            os: [macos-latest, ARM64],
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            generators: "Ninja",
            executable_file: "RType"
          }
          - {
            name: "MacOS Apple Silicon",
            os: macos-latest,
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            generators: "Ninja",
            executable_file: "RType"
          }

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Linux')
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake libtbb-dev
          sudo apt-get install -y xorg-dev libglu1-mesa-dev
          sudo apt-get install -y libxrandr-dev
          ninja --version
          cmake --version
          gcc --version
      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake ninja
          ninja --version
          cmake --version

      - name: Configure project
        shell: bash
        run: |
          mkdir build
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -DCMAKE_CXX_STANDARD=20 \
            -DBoost_DEBUG=0 \
            -G "${{ matrix.config.generators }}"
      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}
      - name: Check file exists
        shell: bash
        run: test -f build/${{ matrix.config.executable_file }}